;(async () => {
  try {
    const response = await fetch(
      'https://api.stage.veeve-cms.cowlar.com/categories',
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization:
            'Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6InZlZXZlLWNtcy1zZXJ2ZXItMSJ9.eyJpZCI6NCwibmFtZSI6IlN1cGVyIEFkbWluIiwiZW1haWwiOiJzdXBlcmFkbWluQGRmLmNvbSIsInBob25lIjpudWxsLCJhZG1pbiI6dHJ1ZSwic3VwZXJfYWRtaW4iOnRydWUsIm9yZ0lkIjpudWxsLCJleHBpcmVfdGltZSI6MzYwMDAwMCwic3RvcmVJZCI6bnVsbCwicmVtZW1iZXIiOnRydWUsImxiX3NhIjpudWxsLCJyb2xlIjp7ImlkIjoxLCJ0aXRsZSI6InN1cGVyIGFkbWluIiwibWFuYWdlVXNlcnMiOmZhbHNlLCJzdXBlciI6dHJ1ZSwiYWRtaW4iOnRydWUsImdldFVzZXJzIjpmYWxzZSwibWFuYWdlRGV2aWNlcyI6ZmFsc2UsImdldERldmljZXMiOmZhbHNlLCJjZW8iOmZhbHNlLCJnZXRMb2dzIjpmYWxzZSwibWFuYWdlTG9ncyI6ZmFsc2UsImdldEtwaXMiOmZhbHNlLCJtYW5hZ2VLcGlzIjpmYWxzZSwiZ2V0T3JnYW5pemF0aW9uIjpmYWxzZSwibWFuYWdlT3JnYW5pemF0aW9uIjpmYWxzZSwibWFuYWdlU2NoZWR1bGVzIjp0cnVlLCJnZXRTY2hlZHVsZXMiOnRydWUsIm1hbmFnZUdyb3VwcyI6dHJ1ZSwiZ2V0R3JvdXBzIjp0cnVlLCJnZXRSb2xlcyI6dHJ1ZSwiZ2V0Q291cnNlcyI6ZmFsc2UsIm1hbmFnZUNvdXJzZXMiOmZhbHNlLCJnZXRDb3Vwb25zIjpmYWxzZSwibWFuYWdlQ291cG9ucyI6ZmFsc2UsImRldmljZU9uYm9hcmRpbmciOmZhbHNlfSwidG9rZW5fdHlwZSI6ImFjY2VzcyIsImlhdCI6MTY5MzUwNzA5NywiZXhwIjoxNjk3MTA3MDk3fQ.i8UQ8OFovNWIVZ7j1cc8S_hFkS_sVT0yNP-PtYS8HmYrm3yp8leoUBwzf5-FolrATzOq_Z6vsLgeTG8P6BkvZUQe22oI1z9maEvG3An_knXZ_psgkI3owG7F0ADTqkAVTZTQHajDaLDBSzT5XuJTUKb2gMOPlwCBg0xiCupuK5sE-8KT3IrDUNhs2yA7AJ3BtzyKfQc7JRlKOyfV9rPXzDCGi3ymVbwGYmNNxUTRrzPupo9egl2rLB65ZkvU0O3b2Pur6tAGBnuyrw5waSdkygJuOGOB83PLz7H-U6m_zGEm8cdLqDhj1pPFA8GhW_VPJsOOTTpShzYvjiEllBhv0Q',
        },
        body: JSON.stringify({
          storeId: 36,
          name: 'Test',
          link: 'abc.com',
          logo: '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',
        }),
      }
    )
    console.log(response.json())
  } catch (error) {
    console.log(error)
  }
})()
